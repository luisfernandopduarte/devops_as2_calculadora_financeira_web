name: CI 

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:
 
jobs:
  build-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: 'docker build -t ${{secrets.CI_REGISTRY_USER}}/calculadora-html:latest .'
      - run: 'docker login -u ${{secrets.CI_REGISTRY_USER}} -p ${{secrets.CI_REGISTRY_PASSWORD}}'
      - run: 'docker push ${{secrets.CI_REGISTRY_USER}}/calculadora-html:latest'
      
      
  test-owasp-job:
        runs-on: ubuntu-latest
        steps:
        - name: OWASP ZAP Baseline Scan
          uses: zaproxy/action-baseline@v0.7.0
          with:
            token: ${{secrets.CI_GIT_TOKEN}}
            target: ${{secrets.CI_URL_NGROK}}
            docker_name: owasp/zap2docker-stable
            issue_title: ZAP Scan Baseline Report=
            allow_issue_writing: true
        - run: echo "Teste DAST"
        
  test-SASTvalidator-job:
        runs-on: ubuntu-latest
        steps:
        - name: SAST validator
          uses: michelleamesquita/sast-validator@v40
          with:
            path: .
            language: python
        - run: echo "SAST"
        
  test-sastscan-job:
        runs-on: ubuntu-latest
        steps:
        - name: sast-scan
          uses: AppThreat/sast-scan-action@1.0.2
          with:
            src: /github/luisfernandopduarte/devops_as2_calculadora_financeira_web
        - run: echo "SAST"
     
  deploy-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: 'docker run -d -p 8080:80 ${{secrets.CI_REGISTRY_USER}}/calculadora-html:latest'
      - run: 'sudo snap install ngrok'
      #- run: 'ngrok config add-authtoken ${{secrets.CI_TOKEN_NGROK}}'
      - run: 'ngrok http 8002'
      
